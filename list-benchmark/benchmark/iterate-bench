# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_261.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ygf.benchmark.list.ListIterateBenchmark.arrayListWithIterator
# Parameters: (count = 100000)

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.196 ms/op
# Warmup Iteration   2: 0.190 ms/op
# Warmup Iteration   3: 0.182 ms/op
# Warmup Iteration   4: 0.179 ms/op
# Warmup Iteration   5: 0.178 ms/op
Iteration   1: 0.178 ms/op
Iteration   2: 0.178 ms/op
Iteration   3: 0.179 ms/op
Iteration   4: 0.179 ms/op
Iteration   5: 0.178 ms/op


Result "ygf.benchmark.list.ListIterateBenchmark.arrayListWithIterator":
  0.178 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.178, 0.178, 0.179), stdev = 0.001
  CI (99.9%): [0.177, 0.180] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_261.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ygf.benchmark.list.ListIterateBenchmark.arrayListWithLoop
# Parameters: (count = 100000)

# Run progress: 25.00% complete, ETA 00:05:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.058 ms/op
# Warmup Iteration   2: 0.058 ms/op
# Warmup Iteration   3: 0.058 ms/op
# Warmup Iteration   4: 0.058 ms/op
# Warmup Iteration   5: 0.058 ms/op
Iteration   1: 0.058 ms/op
Iteration   2: 0.058 ms/op
Iteration   3: 0.058 ms/op
Iteration   4: 0.058 ms/op
Iteration   5: 0.058 ms/op


Result "ygf.benchmark.list.ListIterateBenchmark.arrayListWithLoop":
  0.058 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.058, 0.058, 0.058), stdev = 0.001
  CI (99.9%): [0.058, 0.059] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_261.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ygf.benchmark.list.ListIterateBenchmark.linkedListWithIterator
# Parameters: (count = 100000)

# Run progress: 50.00% complete, ETA 00:03:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.344 ms/op
# Warmup Iteration   2: 0.329 ms/op
# Warmup Iteration   3: 0.340 ms/op
# Warmup Iteration   4: 0.339 ms/op
# Warmup Iteration   5: 0.276 ms/op
Iteration   1: 0.265 ms/op
Iteration   2: 0.253 ms/op
Iteration   3: 0.255 ms/op
Iteration   4: 0.255 ms/op
Iteration   5: 0.253 ms/op


Result "ygf.benchmark.list.ListIterateBenchmark.linkedListWithIterator":
  0.256 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.253, 0.256, 0.265), stdev = 0.005
  CI (99.9%): [0.236, 0.276] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_261, Java HotSpot(TM) 64-Bit Server VM, 25.261-b12
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_261.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ygf.benchmark.list.ListIterateBenchmark.linkedListWithLoop
# Parameters: (count = 100000)

# Run progress: 75.00% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: 3930.102 ms/op
# Warmup Iteration   2: 3935.611 ms/op
# Warmup Iteration   3: 3998.018 ms/op
# Warmup Iteration   4: 3873.743 ms/op
# Warmup Iteration   5: 3623.971 ms/op
Iteration   1: 3570.575 ms/op
Iteration   2: 3555.638 ms/op
Iteration   3: 3530.178 ms/op
Iteration   4: 3536.965 ms/op
Iteration   5: 3524.918 ms/op


Result "ygf.benchmark.list.ListIterateBenchmark.linkedListWithLoop":
  3543.655 ±(99.9%) 73.205 ms/op [Average]
  (min, avg, max) = (3524.918, 3543.655, 3570.575), stdev = 19.011
  CI (99.9%): [3470.449, 3616.860] (assumes normal distribution)


# Run complete. Total time: 00:07:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    (count)  Mode  Cnt     Score    Error  Units
ListIterateBenchmark.arrayListWithIterator    100000  avgt    5     0.178 ±  0.001  ms/op
ListIterateBenchmark.arrayListWithLoop        100000  avgt    5     0.058 ±  0.001  ms/op
ListIterateBenchmark.linkedListWithIterator   100000  avgt    5     0.256 ±  0.020  ms/op
ListIterateBenchmark.linkedListWithLoop       100000  avgt    5  3543.655 ± 73.205  ms/op
